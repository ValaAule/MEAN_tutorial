angular.module("app",["ngRoute"]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,o){t.login=function(t,e){o.login(t,e).then(function(t){console.log(t)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,o){t.addPost=function(){t.postBody&&o.create({username:"Add Post Button",body:t.postBody}).success(function(o){t.posts.unshift(o),t.postBody=null})},o.fetch().success(function(o){t.posts=o})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(o){return t.post("/api/posts",o)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},o.login=function(e,n){return t.post("/api/sessions",{username:e,password:n}).then(function(t){return o.token=t.data,o.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImxvZ2luLmN0cmwuanMiLCJwb3N0cy5jdHJsLmpzIiwicG9zdHMuc3ZjLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInVzZXIiLCJjb25zb2xlIiwibG9nIiwiUG9zdHNTdmMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJjcmVhdGUiLCJib2R5Iiwic3VjY2VzcyIsInBvc3QiLCJwb3N0cyIsInVuc2hpZnQiLCJmZXRjaCIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsInN2YyIsImdldFVzZXIiLCJoZWFkZXJzIiwiWC1BdXRoIiwidG9rZW4iLCJ2YWwiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFHQUEsUUFBUUMsT0FBTyxPQUNYLFlDQUpELFFBQVFDLE9BQU8sT0FDZEMsV0FBVyxhQUFBLFNBQUEsVUFBYSxTQUFVQyxFQUFRQyxHQUNuQ0QsRUFBT0UsTUFBUSxTQUFVQyxFQUFVQyxHQUMvQkgsRUFBUUMsTUFBTUMsRUFBVUMsR0FDbkJDLEtBQUssU0FBVUMsR0FDaEJDLFFBQVFDLElBQUlGLFNDTjVCVCxRQUFRQyxPQUFPLE9BSWRDLFdBQVcsYUFBQSxTQUFBLFdBQVksU0FBVUMsRUFBUVMsR0FDdENULEVBQU9VLFFBQVUsV0FDVFYsRUFBT1csVUFDUEYsRUFBU0csUUFDTFQsU0FBVSxrQkFDVlUsS0FBTWIsRUFBT1csV0FDZEcsUUFBUSxTQUFVQyxHQUNqQmYsRUFBT2dCLE1BQU1DLFFBQVFGLEdBQ3JCZixFQUFPVyxTQUFXLFFBSzlCRixFQUFTUyxRQUNKSixRQUFRLFNBQVVFLEdBQ2ZoQixFQUFPZ0IsTUFBUUEsT0N0QjNCbkIsUUFBUUMsT0FBTyxPQUNkcUIsUUFBUSxZQUFBLFFBQVksU0FBVUMsR0FDM0JDLEtBQUtILE1BQVEsV0FDVCxNQUFPRSxHQUFNRSxJQUFJLGVBRXJCRCxLQUFLVCxPQUFTLFNBQVVHLEdBQ3BCLE1BQU9LLEdBQU1MLEtBQUssYUFBY0EsT0NEeENsQixRQUFRQyxPQUFPLE9BQ2R5QixRQUFBLGlCQUFPLFNBQVVDLEdBQ1ZBLEVBQ0tDLEtBQUssS0FBTTFCLFdBQVksWUFBYTJCLFlBQWEsZUFDakRELEtBQUssYUFBYzFCLFdBQVksZUFBZ0IyQixZQUFhLGtCQUM1REQsS0FBSyxVQUFXMUIsV0FBWSxZQUFhMkIsWUFBYSxrQkNObkU3QixRQUFRQyxPQUFPLE9BQ2RxQixRQUFRLFdBQUEsUUFBVyxTQUFTQyxHQUNyQixHQUFJTyxHQUFNTixJQUNWTSxHQUFJQyxRQUFVLFdBQ1YsTUFBT1IsR0FBTUUsSUFBSSxjQUNiTyxTQUFXQyxTQUFTVCxLQUFLVSxVQUdqQ0osRUFBSXpCLE1BQU0sU0FBU0MsRUFBVUMsR0FDekIsTUFBT2dCLEdBQU1MLEtBQUssaUJBQ2RaLFNBQVVBLEVBQVVDLFNBQVVBLElBQy9CQyxLQUFLLFNBQVUyQixHQUVkLE1BREFMLEdBQUlJLE1BQVFDLEVBQUlDLEtBQ1ROLEVBQUlDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBBdWxlIG9uIDIvNy8xNS5cbiAqL1xuYW5ndWxhci5tb2R1bGUoJ2FwcCcsW1xuICAgICduZ1JvdXRlJ1xuXSkiLCIvKipcbiAqIENyZWF0ZWQgYnkgQXVsZSBvbiAyLzkvMTUuXG4gKi9cblxuYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignTG9naW5DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuICAgICAgICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICAgICAgICBVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXIpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfSkiLCIvKipcbiAqIENyZWF0ZWQgYnkgQXVsZSBvbiAyLzYvMTUuXG4gKi9cbmFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuXG4vL2NyZWF0ZSB0aGUgUG9zdHNDdHJsIG1vZHVsZSBhbmQgZGVwZW5kZW5jeSBpbmplY3QgJHNjb3BlLCB0aGUgc2NvcGUgdGllcy9nbHVlcyB0aGUgY29udHJvbGxlciB0byB0aGUgdmlld1xuLy9pbnRlZ3JhdGUgdG8gdGhlIFJFU1QgQVBJIHRvIHBvc3QgYmFjayB0byBNb25nb0RCLiAgT25seSB0aGUgc3VjY2VzcyBmdW5jdGlvbiBpcyBwb3N0ZWQgYW5kIGl0IG51bGxzIHRoZSB2YWx1ZSBmb3IgdGhlIG5leHQgdGltZVxuLmNvbnRyb2xsZXIoXCJQb3N0c0N0cmxcIixmdW5jdGlvbiAoJHNjb3BlLCBQb3N0c1N2Yykge1xuICAgICRzY29wZS5hZGRQb3N0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICgkc2NvcGUucG9zdEJvZHkpIHtcbiAgICAgICAgICAgIFBvc3RzU3ZjLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6ICdBZGQgUG9zdCBCdXR0b24nLFxuICAgICAgICAgICAgICAgIGJvZHk6ICRzY29wZS5wb3N0Qm9keVxuICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAocG9zdCkge1xuICAgICAgICAgICAgICAgICRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBvc3RCb2R5ID0gbnVsbFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIFBvc3RzU3ZjLmZldGNoKClcbiAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3RzKSB7XG4gICAgICAgICAgICAkc2NvcGUucG9zdHMgPSBwb3N0c1xuICAgICAgICB9KVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLnNlcnZpY2UoJ1Bvc3RzU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG4gICAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9wb3N0cycpXG4gICAgfVxuICAgIHRoaXMuY3JlYXRlID0gZnVuY3Rpb24gKHBvc3QpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCBwb3N0KVxuICAgIH1cbn0pIiwiLyoqXG4gKiBDcmVhdGVkIGJ5IEF1bGUgb24gMi85LzE1LlxuICpcbiAqL1xuXG5hbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICAgICAgICRyb3V0ZVByb3ZpZGVyXG4gICAgICAgICAgICAud2hlbignLycsIHtjb250cm9sbGVyOiAnUG9zdHNDdHJsJywgdGVtcGxhdGVVcmw6ICdwb3N0cy5odG1sJ30pXG4gICAgICAgICAgICAud2hlbignL3JlZ2lzdGVyJywge2NvbnRyb2xsZXI6ICdSZWdpc3RlckN0cmwnLCB0ZW1wbGF0ZVVybDogJ3JlZ2lzdGVyLmh0bWwnfSlcbiAgICAgICAgICAgIC53aGVuKCcvbG9naW4nLCB7Y29udHJvbGxlcjogJ0xvZ2luQ3RybCcsIHRlbXBsYXRlVXJsOiAnbG9naW4uaHRtbCd9KVxuICAgIH0pIiwiLyoqXG4gKiBDcmVhdGVkIGJ5IEF1bGUgb24gMi85LzE1LlxuICovXG5cbmFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLnNlcnZpY2UoJ1VzZXJTdmMnLCBmdW5jdGlvbigkaHR0cCl7XG4gICAgICAgIHZhciBzdmMgPSB0aGlzXG4gICAgICAgIHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMnLCB7XG4gICAgICAgICAgICAgICAgaGVhZGVyczogeyAnWC1BdXRoJzp0aGlzLnRva2VufVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBzdmMubG9naW49ZnVuY3Rpb24odXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICAgICAgc3ZjLnRva2VuID0gdmFsLmRhdGFcbiAgICAgICAgICAgICAgICByZXR1cm4gc3ZjLmdldFVzZXIoKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICB9KSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==